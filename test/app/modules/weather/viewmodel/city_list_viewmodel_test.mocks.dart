// Mocks generated by Mockito 5.0.15 from annotations
// in weather_app/test/app/modules/weather/viewmodel/city_list_viewmodel_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_app/app/modules/weather/model/city_weather_model.dart'
    as _i2;
import 'package:weather_app/app/modules/weather/repository/open_weather_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeCityWeatherModel_0 extends _i1.Fake implements _i2.CityWeatherModel {
}

/// A class which mocks [OpenWeatherRepositoryHttp].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenWeatherRepositoryHttp extends _i1.Mock
    implements _i3.OpenWeatherRepositoryHttp {
  MockOpenWeatherRepositoryHttp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CityWeatherModel> getWeatherByLocation(_i2.Coord? coord) =>
      (super.noSuchMethod(Invocation.method(#getWeatherByLocation, [coord]),
              returnValue:
                  Future<_i2.CityWeatherModel>.value(_FakeCityWeatherModel_0()))
          as _i4.Future<_i2.CityWeatherModel>);
  @override
  _i4.Future<_i2.CityWeatherModel> getWeatherByCityName(String? city) =>
      (super.noSuchMethod(Invocation.method(#getWeatherByCityName, [city]),
              returnValue:
                  Future<_i2.CityWeatherModel>.value(_FakeCityWeatherModel_0()))
          as _i4.Future<_i2.CityWeatherModel>);
  @override
  String toString() => super.toString();
}
